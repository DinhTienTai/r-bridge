% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/AA.classes.R
\docType{class}
\name{arc.raster-class}
\alias{arc.raster-class}
\alias{as.raster,arc.raster-method}
\alias{dim,arc.raster-method}
\alias{dim<-,arc.raster-method}
\alias{names,arc.raster-method}
\title{Reference Class "arc.raster"}
\description{
TODO
}
\section{Fields}{

\describe{
\item{\code{sr}}{Get or set Spacial Reference}

\item{\code{extent}}{Get or set extent. Uset it to read portion of raster.}

\item{\code{nrow}}{Get or set number of row.}

\item{\code{ncol}}{Get or set number of column.}

\item{\code{cellsize}}{Get pixel size.}

\item{\code{\link[=pixeltypes]{pixel_type}}}{Get or set pixel type.}

\item{\code{pixel_depth}}{Get pixel depth}

\item{\code{nodata}}{Get or set nodata value}

\item{\code{\link[=resampletypes]{resample_type}}}{Get or set resampling type.}

\item{\code{colormap}}{Get or set color map table. Return is a vector of 256 colors in the RGB format.}

\item{\code{bands}}{Get raster band information}
}}
\section{Methods}{

\describe{
  \item{\link{names}}{}
  \item{\link{dim}}{}
  \item{\link{arc.write}}{}
  \item{\code{$save_as(path, opt)}}{
  }

  \item{\code{$commit(opt)}}{
      End writing. \code{opt} - aditional parameter (default: build-stats)
  }

  \item{\code{$pixel_block(ul_x, ul_y, nrow, ncol, bands)}}{
    Read pixel values.
    \code{ul_x, ul_y} - upper left corner in pixels
    \code{nrow, ncol} - size in pixels
  }

  \item{\code{$write_pixel_block(values, ul_x, ul_y, ncol, nrow)}}{
      Write pixel values.
  }

  \item{\code{$attribute_table()}}{
      Query raster attribute table
  }
}
}
\examples{
## read 5x5 pixel block with 10,10 offset
r.file <- system.file("pictures", "cea.tif", package="rgdal")
r <- arc.raster(arc.open(r.file))
v <- r$pixel_block(ul_x = 10L, ul_y = 10L, nrow = 5L, ncol= 5L)
stopifnot(length(v) == 25)

## process big raster
r2 = arc.raster(NULL, path=tempfile("r2", fileext=".img"),
                dim=dim(r), pixel_type=r$pixel_type, nodata=r$nodata,
                extent=r$extent,sr=r$sr)
for (i in 1L:r$nrow)
{
  v <- r$pixel_block(ul_y = i - 1L, nrow = 1L)
  r2$write_pixel_block(v * 1.5, ul_y = i - 1L, nrow = 1L, ncol = r$ncol)
}
r2$commit()

## resample raster
r <- arc.raster(arc.open(r.file), nrow=200L, ncol=200L, resample_type="BilinearGaussBlur")

## save to a different format
r$save_as(tempfile("new_raster", fileext=".img"))

## get and compare all pixel values
r.file <- system.file("pictures", "logo.jpg", package="rgdal")
rx <- raster::brick(r.file)
r <- arc.raster(arc.open(r.file))
stopifnot(all(raster::values(rx) == r$pixel_block()))

}

